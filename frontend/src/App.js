import "./App.css";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faFaceSmile } from "@fortawesome/free-solid-svg-icons";
import { faGithub } from "@fortawesome/free-brands-svg-icons";
import { projects } from "./static/projects";

let TopBar = () => {
  return (
    <div className="TopBar">
      <div className="Icon InfoButton">
        <FontAwesomeIcon icon={faFaceSmile} />
      </div>
      <div className="Icon GithubButton">
        <FontAwesomeIcon icon={faGithub} />
      </div>
    </div>
  );
};

let ProjectTitle = ({ titles }) => {
  return <div className="ProjectTitles SpacedText">{titles}</div>;
};

let ProjectDescription = ({ description }) => {
  return <div className="ProjectDescription SpacedText">{description}</div>;
};

let MainCard = ({ titles, description }) => {
  return (
    <div className="MainCard">
      <TopBar />
      <ProjectTitle titles={titles} />
      <ProjectDescription description={description} />
    </div>
  );
};

let RefreshButton = () => {
  return (
    <div className="RefreshButton">
      <a href="">Give me a new idea!</a>
    </div>
  );
};

let FooterInfo = () => {
  return (
    <div className="FooterInfo">
      <div>All prompts were generated by the GPT3 AI.</div>
      <div>Musa was made with &lt;3 by Dikson Santos.</div>
    </div>
  );
};

let Footer = () => {
  return (
    <div className="Footer">
      <RefreshButton />
      <FooterInfo />
    </div>
  );
};

let genColor = (hue, saturation, lightness) => {
  return `hsl(${hue}, ${saturation}%, ${lightness}%)`;
};

let generateGradient = () => {
  let randomHue = Math.floor(Math.random() * 360);
  let deltaHue = 70;
  let saturation = 40;
  let lightness = 60;
  return {
    color1: genColor(randomHue, saturation, lightness),
    color2: genColor(randomHue + deltaHue, saturation, lightness),
  };
};

let mockGenerateProject = () => {
  let randomIndex = Math.floor(Math.random() * projects.length);
  let project = projects[randomIndex];
  return {
    titles: project.titles,
    description: project.description,
    gradient: generateGradient(),
  };
};

let App = () => {
  let { titles, description, gradient } = mockGenerateProject();
  return (
    <div
      className="App"
      style={{
        background: `linear-gradient(to top right, ${gradient.color1}, ${gradient.color2})`,
      }}
    >
      <MainCard titles={titles} description={description} />
      <Footer />
    </div>
  );
};

export default App;
